basePath: /
definitions:
  models.Post:
    properties:
      author:
        $ref: '#/definitions/models.User'
        description: 작성자
        type: object
      author_id:
        description: 작성자 아이디
        example: "0"
        type: string
      content:
        description: 내용
        type: string
      created_at:
        description: 생성시간
        type: string
      id:
        description: 아이디
        example: "0"
        type: string
      title:
        description: 제목
        type: string
      updated_at:
        description: 수정시간
        type: string
    type: object
  models.User:
    properties:
      created_at:
        description: 생성시간
        type: string
      email:
        description: 이메일
        type: string
      id:
        description: 아이디
        example: "0"
        type: string
      nickname:
        description: 닉네임
        type: string
      password:
        description: 비밀번호
        type: string
      updated_at:
        description: 수정시간
        type: string
    type: object
host: localhost:7878
info:
  contact:
    email: hyun@hwa.com
    name: API support
  description: go rest api 설명
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: go rest api
  version: "0.1"
paths:
  /posts:
    get:
      consumes:
      - application/json
      description: 포스트 목록 조회
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
      summary: Get Post List
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Create a post with the input payload
      parameters:
      - description: Create post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      summary: Create a Post
      tags:
      - posts
  /users:
    get:
      consumes:
      - application/json
      description: 사용자 목록 조회
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get User List
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a user with the input payload
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Create a User
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: 사용자 삭제
      parameters:
      - description: user id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
      summary: Delete a User
      tags:
      - users
    get:
      consumes:
      - application/json
      description: 사용자 상세 조회
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Show User Details
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user with the input payload
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: Update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update a User
      tags:
      - users
swagger: "2.0"
